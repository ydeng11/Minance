/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record18;
import org.jooq.Row18;
import org.jooq.impl.UpdatableRecordImpl;

import today.ihelio.jooq.tables.Transactions;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> implements Record18<Integer, Integer, String, String, String, LocalDate, LocalDate, String, String, String, String, String, String, BigDecimal, String, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>minance.transactions.transaction_id</code>.
     */
    public void setTransactionId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>minance.transactions.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>minance.transactions.account_id</code>.
     */
    public void setAccountId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>minance.transactions.account_id</code>.
     */
    public Integer getAccountId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>minance.transactions.category</code>.
     */
    public void setCategory(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>minance.transactions.category</code>.
     */
    public String getCategory() {
        return (String) get(2);
    }

    /**
     * Setter for <code>minance.transactions.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>minance.transactions.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>minance.transactions.transaction_type</code>.
     */
    public void setTransactionType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>minance.transactions.transaction_type</code>.
     */
    public String getTransactionType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>minance.transactions.transaction_date</code>.
     */
    public void setTransactionDate(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>minance.transactions.transaction_date</code>.
     */
    public LocalDate getTransactionDate() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>minance.transactions.post_date</code>.
     */
    public void setPostDate(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>minance.transactions.post_date</code>.
     */
    public LocalDate getPostDate() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>minance.transactions.memo</code>.
     */
    public void setMemo(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>minance.transactions.memo</code>.
     */
    public String getMemo() {
        return (String) get(7);
    }

    /**
     * Setter for <code>minance.transactions.address</code>.
     */
    public void setAddress(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>minance.transactions.address</code>.
     */
    public String getAddress() {
        return (String) get(8);
    }

    /**
     * Setter for <code>minance.transactions.city</code>.
     */
    public void setCity(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>minance.transactions.city</code>.
     */
    public String getCity() {
        return (String) get(9);
    }

    /**
     * Setter for <code>minance.transactions.state_name</code>.
     */
    public void setStateName(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>minance.transactions.state_name</code>.
     */
    public String getStateName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>minance.transactions.country</code>.
     */
    public void setCountry(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>minance.transactions.country</code>.
     */
    public String getCountry() {
        return (String) get(11);
    }

    /**
     * Setter for <code>minance.transactions.zipcode</code>.
     */
    public void setZipcode(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>minance.transactions.zipcode</code>.
     */
    public String getZipcode() {
        return (String) get(12);
    }

    /**
     * Setter for <code>minance.transactions.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(13, value);
    }

    /**
     * Getter for <code>minance.transactions.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(13);
    }

    /**
     * Setter for <code>minance.transactions.bank_name</code>.
     */
    public void setBankName(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>minance.transactions.bank_name</code>.
     */
    public String getBankName() {
        return (String) get(14);
    }

    /**
     * Setter for <code>minance.transactions.account_name</code>.
     */
    public void setAccountName(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>minance.transactions.account_name</code>.
     */
    public String getAccountName() {
        return (String) get(15);
    }

    /**
     * Setter for <code>minance.transactions.upload_time</code>.
     */
    public void setUploadTime(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>minance.transactions.upload_time</code>.
     */
    public String getUploadTime() {
        return (String) get(16);
    }

    /**
     * Setter for <code>minance.transactions.is_duplicate</code>.
     */
    public void setIsDuplicate(Boolean value) {
        set(17, value);
    }

    /**
     * Getter for <code>minance.transactions.is_duplicate</code>.
     */
    public Boolean getIsDuplicate() {
        return (Boolean) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record18 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row18<Integer, Integer, String, String, String, LocalDate, LocalDate, String, String, String, String, String, String, BigDecimal, String, String, String, Boolean> fieldsRow() {
        return (Row18) super.fieldsRow();
    }

    @Override
    public Row18<Integer, Integer, String, String, String, LocalDate, LocalDate, String, String, String, String, String, String, BigDecimal, String, String, String, Boolean> valuesRow() {
        return (Row18) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Transactions.TRANSACTIONS.TRANSACTION_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Transactions.TRANSACTIONS.ACCOUNT_ID;
    }

    @Override
    public Field<String> field3() {
        return Transactions.TRANSACTIONS.CATEGORY;
    }

    @Override
    public Field<String> field4() {
        return Transactions.TRANSACTIONS.DESCRIPTION;
    }

    @Override
    public Field<String> field5() {
        return Transactions.TRANSACTIONS.TRANSACTION_TYPE;
    }

    @Override
    public Field<LocalDate> field6() {
        return Transactions.TRANSACTIONS.TRANSACTION_DATE;
    }

    @Override
    public Field<LocalDate> field7() {
        return Transactions.TRANSACTIONS.POST_DATE;
    }

    @Override
    public Field<String> field8() {
        return Transactions.TRANSACTIONS.MEMO;
    }

    @Override
    public Field<String> field9() {
        return Transactions.TRANSACTIONS.ADDRESS;
    }

    @Override
    public Field<String> field10() {
        return Transactions.TRANSACTIONS.CITY;
    }

    @Override
    public Field<String> field11() {
        return Transactions.TRANSACTIONS.STATE_NAME;
    }

    @Override
    public Field<String> field12() {
        return Transactions.TRANSACTIONS.COUNTRY;
    }

    @Override
    public Field<String> field13() {
        return Transactions.TRANSACTIONS.ZIPCODE;
    }

    @Override
    public Field<BigDecimal> field14() {
        return Transactions.TRANSACTIONS.AMOUNT;
    }

    @Override
    public Field<String> field15() {
        return Transactions.TRANSACTIONS.BANK_NAME;
    }

    @Override
    public Field<String> field16() {
        return Transactions.TRANSACTIONS.ACCOUNT_NAME;
    }

    @Override
    public Field<String> field17() {
        return Transactions.TRANSACTIONS.UPLOAD_TIME;
    }

    @Override
    public Field<Boolean> field18() {
        return Transactions.TRANSACTIONS.IS_DUPLICATE;
    }

    @Override
    public Integer component1() {
        return getTransactionId();
    }

    @Override
    public Integer component2() {
        return getAccountId();
    }

    @Override
    public String component3() {
        return getCategory();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public String component5() {
        return getTransactionType();
    }

    @Override
    public LocalDate component6() {
        return getTransactionDate();
    }

    @Override
    public LocalDate component7() {
        return getPostDate();
    }

    @Override
    public String component8() {
        return getMemo();
    }

    @Override
    public String component9() {
        return getAddress();
    }

    @Override
    public String component10() {
        return getCity();
    }

    @Override
    public String component11() {
        return getStateName();
    }

    @Override
    public String component12() {
        return getCountry();
    }

    @Override
    public String component13() {
        return getZipcode();
    }

    @Override
    public BigDecimal component14() {
        return getAmount();
    }

    @Override
    public String component15() {
        return getBankName();
    }

    @Override
    public String component16() {
        return getAccountName();
    }

    @Override
    public String component17() {
        return getUploadTime();
    }

    @Override
    public Boolean component18() {
        return getIsDuplicate();
    }

    @Override
    public Integer value1() {
        return getTransactionId();
    }

    @Override
    public Integer value2() {
        return getAccountId();
    }

    @Override
    public String value3() {
        return getCategory();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public String value5() {
        return getTransactionType();
    }

    @Override
    public LocalDate value6() {
        return getTransactionDate();
    }

    @Override
    public LocalDate value7() {
        return getPostDate();
    }

    @Override
    public String value8() {
        return getMemo();
    }

    @Override
    public String value9() {
        return getAddress();
    }

    @Override
    public String value10() {
        return getCity();
    }

    @Override
    public String value11() {
        return getStateName();
    }

    @Override
    public String value12() {
        return getCountry();
    }

    @Override
    public String value13() {
        return getZipcode();
    }

    @Override
    public BigDecimal value14() {
        return getAmount();
    }

    @Override
    public String value15() {
        return getBankName();
    }

    @Override
    public String value16() {
        return getAccountName();
    }

    @Override
    public String value17() {
        return getUploadTime();
    }

    @Override
    public Boolean value18() {
        return getIsDuplicate();
    }

    @Override
    public TransactionsRecord value1(Integer value) {
        setTransactionId(value);
        return this;
    }

    @Override
    public TransactionsRecord value2(Integer value) {
        setAccountId(value);
        return this;
    }

    @Override
    public TransactionsRecord value3(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public TransactionsRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TransactionsRecord value5(String value) {
        setTransactionType(value);
        return this;
    }

    @Override
    public TransactionsRecord value6(LocalDate value) {
        setTransactionDate(value);
        return this;
    }

    @Override
    public TransactionsRecord value7(LocalDate value) {
        setPostDate(value);
        return this;
    }

    @Override
    public TransactionsRecord value8(String value) {
        setMemo(value);
        return this;
    }

    @Override
    public TransactionsRecord value9(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public TransactionsRecord value10(String value) {
        setCity(value);
        return this;
    }

    @Override
    public TransactionsRecord value11(String value) {
        setStateName(value);
        return this;
    }

    @Override
    public TransactionsRecord value12(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public TransactionsRecord value13(String value) {
        setZipcode(value);
        return this;
    }

    @Override
    public TransactionsRecord value14(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionsRecord value15(String value) {
        setBankName(value);
        return this;
    }

    @Override
    public TransactionsRecord value16(String value) {
        setAccountName(value);
        return this;
    }

    @Override
    public TransactionsRecord value17(String value) {
        setUploadTime(value);
        return this;
    }

    @Override
    public TransactionsRecord value18(Boolean value) {
        setIsDuplicate(value);
        return this;
    }

    @Override
    public TransactionsRecord values(Integer value1, Integer value2, String value3, String value4, String value5, LocalDate value6, LocalDate value7, String value8, String value9, String value10, String value11, String value12, String value13, BigDecimal value14, String value15, String value16, String value17, Boolean value18) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(Integer transactionId, Integer accountId, String category, String description, String transactionType, LocalDate transactionDate, LocalDate postDate, String memo, String address, String city, String stateName, String country, String zipcode, BigDecimal amount, String bankName, String accountName, String uploadTime, Boolean isDuplicate) {
        super(Transactions.TRANSACTIONS);

        setTransactionId(transactionId);
        setAccountId(accountId);
        setCategory(category);
        setDescription(description);
        setTransactionType(transactionType);
        setTransactionDate(transactionDate);
        setPostDate(postDate);
        setMemo(memo);
        setAddress(address);
        setCity(city);
        setStateName(stateName);
        setCountry(country);
        setZipcode(zipcode);
        setAmount(amount);
        setBankName(bankName);
        setAccountName(accountName);
        setUploadTime(uploadTime);
        setIsDuplicate(isDuplicate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(today.ihelio.jooq.tables.pojos.Transactions value) {
        super(Transactions.TRANSACTIONS);

        if (value != null) {
            setTransactionId(value.getTransactionId());
            setAccountId(value.getAccountId());
            setCategory(value.getCategory());
            setDescription(value.getDescription());
            setTransactionType(value.getTransactionType());
            setTransactionDate(value.getTransactionDate());
            setPostDate(value.getPostDate());
            setMemo(value.getMemo());
            setAddress(value.getAddress());
            setCity(value.getCity());
            setStateName(value.getStateName());
            setCountry(value.getCountry());
            setZipcode(value.getZipcode());
            setAmount(value.getAmount());
            setBankName(value.getBankName());
            setAccountName(value.getAccountName());
            setUploadTime(value.getUploadTime());
            setIsDuplicate(value.getIsDuplicate());
            resetChangedOnNotNull();
        }
    }
}
