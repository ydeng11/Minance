/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import today.ihelio.jooq.tables.MinanceCategory;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MinanceCategoryRecord extends UpdatableRecordImpl<MinanceCategoryRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>minance.minance_category.m_category_id</code>.
     */
    public void setMCategoryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>minance.minance_category.m_category_id</code>.
     */
    public Integer getMCategoryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>minance.minance_category.category</code>.
     */
    public void setCategory(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>minance.minance_category.category</code>.
     */
    public String getCategory() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MinanceCategory.MINANCE_CATEGORY.M_CATEGORY_ID;
    }

    @Override
    public Field<String> field2() {
        return MinanceCategory.MINANCE_CATEGORY.CATEGORY;
    }

    @Override
    public Integer component1() {
        return getMCategoryId();
    }

    @Override
    public String component2() {
        return getCategory();
    }

    @Override
    public Integer value1() {
        return getMCategoryId();
    }

    @Override
    public String value2() {
        return getCategory();
    }

    @Override
    public MinanceCategoryRecord value1(Integer value) {
        setMCategoryId(value);
        return this;
    }

    @Override
    public MinanceCategoryRecord value2(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public MinanceCategoryRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MinanceCategoryRecord
     */
    public MinanceCategoryRecord() {
        super(MinanceCategory.MINANCE_CATEGORY);
    }

    /**
     * Create a detached, initialised MinanceCategoryRecord
     */
    public MinanceCategoryRecord(Integer mCategoryId, String category) {
        super(MinanceCategory.MINANCE_CATEGORY);

        setMCategoryId(mCategoryId);
        setCategory(category);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MinanceCategoryRecord
     */
    public MinanceCategoryRecord(today.ihelio.jooq.tables.pojos.MinanceCategory value) {
        super(MinanceCategory.MINANCE_CATEGORY);

        if (value != null) {
            setMCategoryId(value.getMCategoryId());
            setCategory(value.getCategory());
            resetChangedOnNotNull();
        }
    }
}
