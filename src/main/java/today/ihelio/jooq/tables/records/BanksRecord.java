/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import today.ihelio.jooq.tables.Banks;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BanksRecord extends UpdatableRecordImpl<BanksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>banks.bank_id</code>.
     */
    public void setBankId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>banks.bank_id</code>.
     */
    public Integer getBankId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>banks.bank_name</code>.
     */
    public void setBankName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>banks.bank_name</code>.
     */
    public String getBankName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BanksRecord
     */
    public BanksRecord() {
        super(Banks.BANKS);
    }

    /**
     * Create a detached, initialised BanksRecord
     */
    public BanksRecord(Integer bankId, String bankName) {
        super(Banks.BANKS);

        setBankId(bankId);
        setBankName(bankName);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BanksRecord
     */
    public BanksRecord(today.ihelio.jooq.tables.pojos.Banks value) {
        super(Banks.BANKS);

        if (value != null) {
            setBankId(value.getBankId());
            setBankName(value.getBankName());
            resetChangedOnNotNull();
        }
    }
}
