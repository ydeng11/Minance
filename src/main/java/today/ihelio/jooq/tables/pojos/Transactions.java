/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transactions implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer transactionId;
    private Integer accountId;
    private String category;
    private String description;
    private String transactionType;
    private LocalDate transactionDate;
    private LocalDate postDate;
    private String memo;
    private Long amount;
    private String bankName;
    private String accountName;
    private String isDuplicate;

    public Transactions() {}

    public Transactions(Transactions value) {
        this.transactionId = value.transactionId;
        this.accountId = value.accountId;
        this.category = value.category;
        this.description = value.description;
        this.transactionType = value.transactionType;
        this.transactionDate = value.transactionDate;
        this.postDate = value.postDate;
        this.memo = value.memo;
        this.amount = value.amount;
        this.bankName = value.bankName;
        this.accountName = value.accountName;
        this.isDuplicate = value.isDuplicate;
    }

    public Transactions(
        Integer transactionId,
        Integer accountId,
        String category,
        String description,
        String transactionType,
        LocalDate transactionDate,
        LocalDate postDate,
        String memo,
        Long amount,
        String bankName,
        String accountName,
        String isDuplicate
    ) {
        this.transactionId = transactionId;
        this.accountId = accountId;
        this.category = category;
        this.description = description;
        this.transactionType = transactionType;
        this.transactionDate = transactionDate;
        this.postDate = postDate;
        this.memo = memo;
        this.amount = amount;
        this.bankName = bankName;
        this.accountName = accountName;
        this.isDuplicate = isDuplicate;
    }

    /**
     * Getter for <code>minance.transactions.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return this.transactionId;
    }

    /**
     * Setter for <code>minance.transactions.transaction_id</code>.
     */
    public void setTransactionId(Integer transactionId) {
        this.transactionId = transactionId;
    }

    /**
     * Getter for <code>minance.transactions.account_id</code>.
     */
    public Integer getAccountId() {
        return this.accountId;
    }

    /**
     * Setter for <code>minance.transactions.account_id</code>.
     */
    public void setAccountId(Integer accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for <code>minance.transactions.category</code>.
     */
    public String getCategory() {
        return this.category;
    }

    /**
     * Setter for <code>minance.transactions.category</code>.
     */
    public void setCategory(String category) {
        this.category = category;
    }

    /**
     * Getter for <code>minance.transactions.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>minance.transactions.description</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>minance.transactions.transaction_type</code>.
     */
    public String getTransactionType() {
        return this.transactionType;
    }

    /**
     * Setter for <code>minance.transactions.transaction_type</code>.
     */
    public void setTransactionType(String transactionType) {
        this.transactionType = transactionType;
    }

    /**
     * Getter for <code>minance.transactions.transaction_date</code>.
     */
    public LocalDate getTransactionDate() {
        return this.transactionDate;
    }

    /**
     * Setter for <code>minance.transactions.transaction_date</code>.
     */
    public void setTransactionDate(LocalDate transactionDate) {
        this.transactionDate = transactionDate;
    }

    /**
     * Getter for <code>minance.transactions.post_date</code>.
     */
    public LocalDate getPostDate() {
        return this.postDate;
    }

    /**
     * Setter for <code>minance.transactions.post_date</code>.
     */
    public void setPostDate(LocalDate postDate) {
        this.postDate = postDate;
    }

    /**
     * Getter for <code>minance.transactions.memo</code>.
     */
    public String getMemo() {
        return this.memo;
    }

    /**
     * Setter for <code>minance.transactions.memo</code>.
     */
    public void setMemo(String memo) {
        this.memo = memo;
    }

    /**
     * Getter for <code>minance.transactions.amount</code>.
     */
    public Long getAmount() {
        return this.amount;
    }

    /**
     * Setter for <code>minance.transactions.amount</code>.
     */
    public void setAmount(Long amount) {
        this.amount = amount;
    }

    /**
     * Getter for <code>minance.transactions.bank_name</code>.
     */
    public String getBankName() {
        return this.bankName;
    }

    /**
     * Setter for <code>minance.transactions.bank_name</code>.
     */
    public void setBankName(String bankName) {
        this.bankName = bankName;
    }

    /**
     * Getter for <code>minance.transactions.account_name</code>.
     */
    public String getAccountName() {
        return this.accountName;
    }

    /**
     * Setter for <code>minance.transactions.account_name</code>.
     */
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for <code>minance.transactions.is_duplicate</code>.
     */
    public String getIsDuplicate() {
        return this.isDuplicate;
    }

    /**
     * Setter for <code>minance.transactions.is_duplicate</code>.
     */
    public void setIsDuplicate(String isDuplicate) {
        this.isDuplicate = isDuplicate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Transactions other = (Transactions) obj;
        if (this.transactionId == null) {
            if (other.transactionId != null)
                return false;
        }
        else if (!this.transactionId.equals(other.transactionId))
            return false;
        if (this.accountId == null) {
            if (other.accountId != null)
                return false;
        }
        else if (!this.accountId.equals(other.accountId))
            return false;
        if (this.category == null) {
            if (other.category != null)
                return false;
        }
        else if (!this.category.equals(other.category))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.transactionType == null) {
            if (other.transactionType != null)
                return false;
        }
        else if (!this.transactionType.equals(other.transactionType))
            return false;
        if (this.transactionDate == null) {
            if (other.transactionDate != null)
                return false;
        }
        else if (!this.transactionDate.equals(other.transactionDate))
            return false;
        if (this.postDate == null) {
            if (other.postDate != null)
                return false;
        }
        else if (!this.postDate.equals(other.postDate))
            return false;
        if (this.memo == null) {
            if (other.memo != null)
                return false;
        }
        else if (!this.memo.equals(other.memo))
            return false;
        if (this.amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!this.amount.equals(other.amount))
            return false;
        if (this.bankName == null) {
            if (other.bankName != null)
                return false;
        }
        else if (!this.bankName.equals(other.bankName))
            return false;
        if (this.accountName == null) {
            if (other.accountName != null)
                return false;
        }
        else if (!this.accountName.equals(other.accountName))
            return false;
        if (this.isDuplicate == null) {
            if (other.isDuplicate != null)
                return false;
        }
        else if (!this.isDuplicate.equals(other.isDuplicate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.transactionId == null) ? 0 : this.transactionId.hashCode());
        result = prime * result + ((this.accountId == null) ? 0 : this.accountId.hashCode());
        result = prime * result + ((this.category == null) ? 0 : this.category.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.transactionType == null) ? 0 : this.transactionType.hashCode());
        result = prime * result + ((this.transactionDate == null) ? 0 : this.transactionDate.hashCode());
        result = prime * result + ((this.postDate == null) ? 0 : this.postDate.hashCode());
        result = prime * result + ((this.memo == null) ? 0 : this.memo.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.bankName == null) ? 0 : this.bankName.hashCode());
        result = prime * result + ((this.accountName == null) ? 0 : this.accountName.hashCode());
        result = prime * result + ((this.isDuplicate == null) ? 0 : this.isDuplicate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Transactions (");

        sb.append(transactionId);
        sb.append(", ").append(accountId);
        sb.append(", ").append(category);
        sb.append(", ").append(description);
        sb.append(", ").append(transactionType);
        sb.append(", ").append(transactionDate);
        sb.append(", ").append(postDate);
        sb.append(", ").append(memo);
        sb.append(", ").append(amount);
        sb.append(", ").append(bankName);
        sb.append(", ").append(accountName);
        sb.append(", ").append(isDuplicate);

        sb.append(")");
        return sb.toString();
    }
}
