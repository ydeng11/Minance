/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Transactions implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer transactionId;
    private Integer accountId;
    private String category;
    private String description;
    private String transactionType;
    private LocalDate transactionDate;
    private LocalDate postDate;
    private String memo;
    private String address;
    private String city;
    private String stateName;
    private String country;
    private String zipcode;
    private BigDecimal amount;
    private String bankName;
    private String accountName;
    private String uploadTime;
    private Integer isDuplicate;

    public Transactions() {}

    public Transactions(Transactions value) {
        this.transactionId = value.transactionId;
        this.accountId = value.accountId;
        this.category = value.category;
        this.description = value.description;
        this.transactionType = value.transactionType;
        this.transactionDate = value.transactionDate;
        this.postDate = value.postDate;
        this.memo = value.memo;
        this.address = value.address;
        this.city = value.city;
        this.stateName = value.stateName;
        this.country = value.country;
        this.zipcode = value.zipcode;
        this.amount = value.amount;
        this.bankName = value.bankName;
        this.accountName = value.accountName;
        this.uploadTime = value.uploadTime;
        this.isDuplicate = value.isDuplicate;
    }

    public Transactions(
        Integer transactionId,
        Integer accountId,
        String category,
        String description,
        String transactionType,
        LocalDate transactionDate,
        LocalDate postDate,
        String memo,
        String address,
        String city,
        String stateName,
        String country,
        String zipcode,
        BigDecimal amount,
        String bankName,
        String accountName,
        String uploadTime,
        Integer isDuplicate
    ) {
        this.transactionId = transactionId;
        this.accountId = accountId;
        this.category = category;
        this.description = description;
        this.transactionType = transactionType;
        this.transactionDate = transactionDate;
        this.postDate = postDate;
        this.memo = memo;
        this.address = address;
        this.city = city;
        this.stateName = stateName;
        this.country = country;
        this.zipcode = zipcode;
        this.amount = amount;
        this.bankName = bankName;
        this.accountName = accountName;
        this.uploadTime = uploadTime;
        this.isDuplicate = isDuplicate;
    }

    /**
     * Getter for <code>transactions.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return this.transactionId;
    }

    /**
     * Setter for <code>transactions.transaction_id</code>.
     */
    public void setTransactionId(Integer transactionId) {
        this.transactionId = transactionId;
    }

    /**
     * Getter for <code>transactions.account_id</code>.
     */
    public Integer getAccountId() {
        return this.accountId;
    }

    /**
     * Setter for <code>transactions.account_id</code>.
     */
    public void setAccountId(Integer accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for <code>transactions.category</code>.
     */
    public String getCategory() {
        return this.category;
    }

    /**
     * Setter for <code>transactions.category</code>.
     */
    public void setCategory(String category) {
        this.category = category;
    }

    /**
     * Getter for <code>transactions.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>transactions.description</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>transactions.transaction_type</code>.
     */
    public String getTransactionType() {
        return this.transactionType;
    }

    /**
     * Setter for <code>transactions.transaction_type</code>.
     */
    public void setTransactionType(String transactionType) {
        this.transactionType = transactionType;
    }

    /**
     * Getter for <code>transactions.transaction_date</code>.
     */
    public LocalDate getTransactionDate() {
        return this.transactionDate;
    }

    /**
     * Setter for <code>transactions.transaction_date</code>.
     */
    public void setTransactionDate(LocalDate transactionDate) {
        this.transactionDate = transactionDate;
    }

    /**
     * Getter for <code>transactions.post_date</code>.
     */
    public LocalDate getPostDate() {
        return this.postDate;
    }

    /**
     * Setter for <code>transactions.post_date</code>.
     */
    public void setPostDate(LocalDate postDate) {
        this.postDate = postDate;
    }

    /**
     * Getter for <code>transactions.memo</code>.
     */
    public String getMemo() {
        return this.memo;
    }

    /**
     * Setter for <code>transactions.memo</code>.
     */
    public void setMemo(String memo) {
        this.memo = memo;
    }

    /**
     * Getter for <code>transactions.address</code>.
     */
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>transactions.address</code>.
     */
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for <code>transactions.city</code>.
     */
    public String getCity() {
        return this.city;
    }

    /**
     * Setter for <code>transactions.city</code>.
     */
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Getter for <code>transactions.state_name</code>.
     */
    public String getStateName() {
        return this.stateName;
    }

    /**
     * Setter for <code>transactions.state_name</code>.
     */
    public void setStateName(String stateName) {
        this.stateName = stateName;
    }

    /**
     * Getter for <code>transactions.country</code>.
     */
    public String getCountry() {
        return this.country;
    }

    /**
     * Setter for <code>transactions.country</code>.
     */
    public void setCountry(String country) {
        this.country = country;
    }

    /**
     * Getter for <code>transactions.zipcode</code>.
     */
    public String getZipcode() {
        return this.zipcode;
    }

    /**
     * Setter for <code>transactions.zipcode</code>.
     */
    public void setZipcode(String zipcode) {
        this.zipcode = zipcode;
    }

    /**
     * Getter for <code>transactions.amount</code>.
     */
    public BigDecimal getAmount() {
        return this.amount;
    }

    /**
     * Setter for <code>transactions.amount</code>.
     */
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    /**
     * Getter for <code>transactions.bank_name</code>.
     */
    public String getBankName() {
        return this.bankName;
    }

    /**
     * Setter for <code>transactions.bank_name</code>.
     */
    public void setBankName(String bankName) {
        this.bankName = bankName;
    }

    /**
     * Getter for <code>transactions.account_name</code>.
     */
    public String getAccountName() {
        return this.accountName;
    }

    /**
     * Setter for <code>transactions.account_name</code>.
     */
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for <code>transactions.upload_time</code>.
     */
    public String getUploadTime() {
        return this.uploadTime;
    }

    /**
     * Setter for <code>transactions.upload_time</code>.
     */
    public void setUploadTime(String uploadTime) {
        this.uploadTime = uploadTime;
    }

    /**
     * Getter for <code>transactions.is_duplicate</code>.
     */
    public Integer getIsDuplicate() {
        return this.isDuplicate;
    }

    /**
     * Setter for <code>transactions.is_duplicate</code>.
     */
    public void setIsDuplicate(Integer isDuplicate) {
        this.isDuplicate = isDuplicate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Transactions other = (Transactions) obj;
        if (this.transactionId == null) {
            if (other.transactionId != null)
                return false;
        }
        else if (!this.transactionId.equals(other.transactionId))
            return false;
        if (this.accountId == null) {
            if (other.accountId != null)
                return false;
        }
        else if (!this.accountId.equals(other.accountId))
            return false;
        if (this.category == null) {
            if (other.category != null)
                return false;
        }
        else if (!this.category.equals(other.category))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.transactionType == null) {
            if (other.transactionType != null)
                return false;
        }
        else if (!this.transactionType.equals(other.transactionType))
            return false;
        if (this.transactionDate == null) {
            if (other.transactionDate != null)
                return false;
        }
        else if (!this.transactionDate.equals(other.transactionDate))
            return false;
        if (this.postDate == null) {
            if (other.postDate != null)
                return false;
        }
        else if (!this.postDate.equals(other.postDate))
            return false;
        if (this.memo == null) {
            if (other.memo != null)
                return false;
        }
        else if (!this.memo.equals(other.memo))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.city == null) {
            if (other.city != null)
                return false;
        }
        else if (!this.city.equals(other.city))
            return false;
        if (this.stateName == null) {
            if (other.stateName != null)
                return false;
        }
        else if (!this.stateName.equals(other.stateName))
            return false;
        if (this.country == null) {
            if (other.country != null)
                return false;
        }
        else if (!this.country.equals(other.country))
            return false;
        if (this.zipcode == null) {
            if (other.zipcode != null)
                return false;
        }
        else if (!this.zipcode.equals(other.zipcode))
            return false;
        if (this.amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!this.amount.equals(other.amount))
            return false;
        if (this.bankName == null) {
            if (other.bankName != null)
                return false;
        }
        else if (!this.bankName.equals(other.bankName))
            return false;
        if (this.accountName == null) {
            if (other.accountName != null)
                return false;
        }
        else if (!this.accountName.equals(other.accountName))
            return false;
        if (this.uploadTime == null) {
            if (other.uploadTime != null)
                return false;
        }
        else if (!this.uploadTime.equals(other.uploadTime))
            return false;
        if (this.isDuplicate == null) {
            if (other.isDuplicate != null)
                return false;
        }
        else if (!this.isDuplicate.equals(other.isDuplicate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.transactionId == null) ? 0 : this.transactionId.hashCode());
        result = prime * result + ((this.accountId == null) ? 0 : this.accountId.hashCode());
        result = prime * result + ((this.category == null) ? 0 : this.category.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.transactionType == null) ? 0 : this.transactionType.hashCode());
        result = prime * result + ((this.transactionDate == null) ? 0 : this.transactionDate.hashCode());
        result = prime * result + ((this.postDate == null) ? 0 : this.postDate.hashCode());
        result = prime * result + ((this.memo == null) ? 0 : this.memo.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.city == null) ? 0 : this.city.hashCode());
        result = prime * result + ((this.stateName == null) ? 0 : this.stateName.hashCode());
        result = prime * result + ((this.country == null) ? 0 : this.country.hashCode());
        result = prime * result + ((this.zipcode == null) ? 0 : this.zipcode.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.bankName == null) ? 0 : this.bankName.hashCode());
        result = prime * result + ((this.accountName == null) ? 0 : this.accountName.hashCode());
        result = prime * result + ((this.uploadTime == null) ? 0 : this.uploadTime.hashCode());
        result = prime * result + ((this.isDuplicate == null) ? 0 : this.isDuplicate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Transactions (");

        sb.append(transactionId);
        sb.append(", ").append(accountId);
        sb.append(", ").append(category);
        sb.append(", ").append(description);
        sb.append(", ").append(transactionType);
        sb.append(", ").append(transactionDate);
        sb.append(", ").append(postDate);
        sb.append(", ").append(memo);
        sb.append(", ").append(address);
        sb.append(", ").append(city);
        sb.append(", ").append(stateName);
        sb.append(", ").append(country);
        sb.append(", ").append(zipcode);
        sb.append(", ").append(amount);
        sb.append(", ").append(bankName);
        sb.append(", ").append(accountName);
        sb.append(", ").append(uploadTime);
        sb.append(", ").append(isDuplicate);

        sb.append(")");
        return sb.toString();
    }
}
