/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import today.ihelio.jooq.tables.Banks;
import today.ihelio.jooq.tables.records.BanksRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BanksDao extends DAOImpl<BanksRecord, today.ihelio.jooq.tables.pojos.Banks, Integer> {

    /**
     * Create a new BanksDao without any configuration
     */
    public BanksDao() {
        super(Banks.BANKS, today.ihelio.jooq.tables.pojos.Banks.class);
    }

    /**
     * Create a new BanksDao with an attached configuration
     */
    public BanksDao(Configuration configuration) {
        super(Banks.BANKS, today.ihelio.jooq.tables.pojos.Banks.class, configuration);
    }

    @Override
    public Integer getId(today.ihelio.jooq.tables.pojos.Banks object) {
        return object.getBankId();
    }

    /**
     * Fetch records that have <code>bank_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Banks> fetchRangeOfBankId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Banks.BANKS.BANK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bank_id IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Banks> fetchByBankId(Integer... values) {
        return fetch(Banks.BANKS.BANK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>bank_id = value</code>
     */
    public today.ihelio.jooq.tables.pojos.Banks fetchOneByBankId(Integer value) {
        return fetchOne(Banks.BANKS.BANK_ID, value);
    }

    /**
     * Fetch a unique record that has <code>bank_id = value</code>
     */
    public Optional<today.ihelio.jooq.tables.pojos.Banks> fetchOptionalByBankId(Integer value) {
        return fetchOptional(Banks.BANKS.BANK_ID, value);
    }

    /**
     * Fetch records that have <code>bank_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Banks> fetchRangeOfBankName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Banks.BANKS.BANK_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bank_name IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Banks> fetchByBankName(String... values) {
        return fetch(Banks.BANKS.BANK_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>bank_name = value</code>
     */
    public today.ihelio.jooq.tables.pojos.Banks fetchOneByBankName(String value) {
        return fetchOne(Banks.BANKS.BANK_NAME, value);
    }

    /**
     * Fetch a unique record that has <code>bank_name = value</code>
     */
    public Optional<today.ihelio.jooq.tables.pojos.Banks> fetchOptionalByBankName(String value) {
        return fetchOptional(Banks.BANKS.BANK_NAME, value);
    }
}
